name: ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [12.5]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@main

      - name: Setup node env 🏗
        uses: actions/setup-node@v2.1.2
        with:
          node-version: ${{ matrix.node }}

      # - name: Get yarn cache directory path 🛠
      #   id: yarn-cache-dir-path
      #   run: echo "::set-output name=dir::$(yarn cache dir)"

      # - name: Cache node_modules 📦
      #   uses: actions/cache@v2
      #   id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      #   with:
      #     path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-

      - name: Install dependencies 👨🏻‍💻
        run: yarn

      - name: Build
        run: yarn generate

      - name: 📂 Sync files
        uses: kevinpainchaud/simple-ftp-deploy-action@v1.2.1
        with:
          ftp_host: ${{ secrets.FTP_HOST_DEV }}
          ftp_username: ${{ secrets.FTP_USERNAME_DEV }}
          ftp_password: ${{ secrets.FTP_PASSWORD_DEV }}
          local_source_dir: "dist"
          # dist_target_dir: "/public_html/mal"
          delete: "true"

      # - name: Run linter 👀
      #   run: yarn lint

